### E-commerce YouTube Channel - Single Dedicated Channel OAuth Flow

## ðŸŽ¯ Overview
This implementation is for a dedicated e-commerce YouTube channel where ALL product videos will be uploaded to ONE single channel. No individual users - just authenticate once and upload all videos to the same channel.

## ðŸ“‹ Flow Diagram (As Requested)
```
[User Browser]
   |
   | Click "Connect YouTube Channel"
   v
GET /youtube/oauth/start  (Backend Nest)
   |
   |--> Generate Google Auth URL
   |--> HTTP 302 Redirect
   v
[Google Consent Screen]
   |
   | Admin Approves (e-commerce channel owner)
   v
Redirect -> /youtube/oauth/callback?code=XYZ
   |
   | Backend exchanges code â†’ tokens
   | Store refresh_token in DB (single record)
   v
Response: "E-commerce Channel Connected"
   |
   | Frontend knows integration is ready
   | All product videos will upload to this channel
   v
[Ready for Product Video Uploads]
```

## ðŸ§ª Testing Steps

### Step 1: Check Current Connection Status
```http
GET http://localhost:3008/youtube/oauth/status
```

Expected Response (when not connected):
```json
{
  "connected": false,
  "message": "YouTube channel not connected"
}
```

### Step 2: Connect E-commerce YouTube Channel
```
Open in browser: http://localhost:3008/youtube/oauth/start
```

This will:
1. Redirect to Google OAuth consent screen
2. Admin grants permission for the e-commerce channel
3. Google redirects back with authorization code
4. Backend saves tokens for the dedicated channel

### Step 3: Verify Connection
```http
GET http://localhost:3008/youtube/oauth/status
```

Expected Response (when connected):
```json
{
  "connected": true,
  "channelName": "Your E-commerce Channel Name",
  "channelId": "UCxxxxxxxxxxxxx",
  "message": "E-commerce YouTube channel is connected"
}
```

### Step 4: Create a Product for Video Upload
```http
POST http://localhost:3008/products
Content-Type: application/json

{
  "title": "E-commerce Test Product",
  "subtitle": "Testing dedicated channel upload",
  "description": "This product tests single channel YouTube integration",
  "basePrice": 299.99,
  "discountedPrice": 249.99,
  "sku": "ECOM-YOUTUBE-001",
  "published": true,
  "isPublished": true
}
```

### Step 5: Upload Product Video (No userId needed!)
```http
POST http://localhost:3008/product-videos
Content-Type: multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW

------WebKitFormBoundary7MA4YWxkTrZu0gW
Content-Disposition: form-data; name="productId"

1
------WebKitFormBoundary7MA4YWxkTrZu0gW
Content-Disposition: form-data; name="title"

Amazing Product Demo - E-commerce Channel
------WebKitFormBoundary7MA4YWxkTrZu0gW
Content-Disposition: form-data; name="description"

This product video will be uploaded to our dedicated e-commerce YouTube channel!

âœ… Single channel for all products
âœ… No user management needed  
âœ… Centralized YouTube presence
âœ… Professional brand consistency

Perfect for e-commerce stores!
------WebKitFormBoundary7MA4YWxkTrZu0gW
Content-Disposition: form-data; name="position"

1
------WebKitFormBoundary7MA4YWxkTrZu0gW
Content-Disposition: form-data; name="video"; filename="product-demo.mp4"
Content-Type: video/mp4

[Upload your video file here]
------WebKitFormBoundary7MA4YWxkTrZu0gW--
```

### Step 6: Monitor Upload Progress

#### Check QUEUED videos
```http
GET http://localhost:3008/product-videos/status/QUEUED
```

#### Check UPLOADING videos
```http
GET http://localhost:3008/product-videos/status/UPLOADING
```

#### Check PROCESSING videos (YouTube processing)
```http
GET http://localhost:3008/product-videos/status/PROCESSING
```

#### Check LIVE videos (ready for frontend display)
```http
GET http://localhost:3008/product-videos/status/LIVE
```

#### Check FAILED videos (if any errors)
```http
GET http://localhost:3008/product-videos/status/FAILED
```

### Step 7: Get Product Videos for Frontend Display

#### Get all live videos for a specific product
```http
GET http://localhost:3008/product-videos/product/1
```

Expected Response:
```json
[
  {
    "id": 1,
    "productId": 1,
    "youtubeVideoId": "dQw4w9WgXcQ",
    "title": "Amazing Product Demo",
    "description": "Product demonstration video",
    "status": "LIVE",
    "position": 1,
    "uploadedAt": "2025-09-24T10:00:00Z",
    "createdAt": "2025-09-24T09:55:00Z"
  }
]
```

#### Get specific video details
```http
GET http://localhost:3008/product-videos/1
```

#### Get all videos (admin view)
```http
GET http://localhost:3008/product-videos
```

## ðŸš€ Frontend Integration

### Check YouTube Connection Status
```javascript
const checkYouTubeConnection = async () => {
  const response = await fetch('/youtube/oauth/status');
  const data = await response.json();
  
  if (data.connected) {
    console.log(`E-commerce channel connected: ${data.channelName}`);
    return true;
  } else {
    console.log('YouTube channel not connected');
    return false;
  }
};
```

### Connect YouTube Channel (Admin Only)
```javascript
const connectYouTubeChannel = () => {
  // Only admin needs to do this once
  window.location.href = '/youtube/oauth/start';
};
```

### Upload Product Video
```javascript
const uploadProductVideo = async (productId, videoFile, title, description) => {
  // Check if channel is connected first
  const isConnected = await checkYouTubeConnection();
  if (!isConnected) {
    alert('YouTube channel not connected. Please connect first.');
    return;
  }

  const formData = new FormData();
  formData.append('productId', productId);
  formData.append('title', title);
  formData.append('description', description);
  formData.append('video', videoFile);

  const response = await fetch('/product-videos', {
    method: 'POST',
    body: formData
  });

  const result = await response.json();
  console.log('Video queued for e-commerce channel:', result.videoId);
  
  // Start monitoring upload progress
  monitorUploadProgress(result.videoId);
};
```

### Monitor Upload Progress
```javascript
const monitorUploadProgress = async (videoId) => {
  const checkStatus = async () => {
    const response = await fetch(`/product-videos/${videoId}`);
    const video = await response.json();
    
    switch (video.status) {
      case 'QUEUED':
        console.log('Video queued for upload to e-commerce channel...');
        break;
      case 'UPLOADING':
        console.log('Uploading to e-commerce YouTube channel...');
        break;
      case 'PROCESSING':
        console.log('YouTube is processing video...');
        break;
      case 'LIVE':
        console.log('Video is LIVE on e-commerce channel!', video.youtubeVideoId);
        displayVideo(video.youtubeVideoId);
        return; // Stop monitoring
      case 'FAILED':
        console.error('Upload failed:', video.errorMessage);
        return; // Stop monitoring
    }
    
    // Check again in 5 seconds
    setTimeout(checkStatus, 5000);
  };
  
  checkStatus();
};
```

### Display YouTube Videos
```javascript
const displayVideo = (youtubeVideoId) => {
  const embedUrl = `https://www.youtube.com/embed/${youtubeVideoId}`;
  const iframe = `<iframe width="560" height="315" src="${embedUrl}" frameborder="0" allowfullscreen></iframe>`;
  document.getElementById('video-container').innerHTML = iframe;
};

// Get all live videos for a product page
const getProductVideos = async (productId) => {
  const response = await fetch(`/product-videos/product/${productId}`);
  const videos = await response.json();
  
  videos.forEach(video => {
    if (video.youtubeVideoId) {
      displayVideo(video.youtubeVideoId);
    }
  });
};
```

## ðŸŽ¯ Benefits of Single Channel Approach

âœ… **Centralized Brand Presence** - All videos on one professional channel  
âœ… **Simplified Management** - One authentication, no user complexity  
âœ… **Consistent Branding** - Unified YouTube channel for e-commerce  
âœ… **Easy Administration** - Single point of control  
âœ… **SEO Benefits** - All videos boost one channel's authority  
âœ… **Professional Appearance** - Customers see organized product catalog  

## ðŸ”§ API Endpoints Summary

### YouTube OAuth (Admin Only)
| Method | Endpoint | Description |
|--------|----------|-------------|
| GET | `/youtube/oauth/start` | Connect e-commerce channel |
| GET | `/youtube/oauth/callback` | OAuth callback |
| GET | `/youtube/oauth/status` | Check connection status |

### Video Management
| Method | Endpoint | Description |
|--------|----------|-------------|
| POST | `/product-videos` | Upload product video |
| GET | `/product-videos` | Get all videos (admin) |
| GET | `/product-videos/product/:id` | Get videos for product |
| GET | `/product-videos/status/:status` | Monitor by status |
| GET | `/product-videos/:id` | Get video details |
| PATCH | `/product-videos/:id` | Update video |
| DELETE | `/product-videos/:id` | Delete video |

## âš¡ Background Processing

- **Cron Job**: Runs every 30 seconds to process QUEUED videos
- **Status Flow**: QUEUED â†’ UPLOADING â†’ PROCESSING â†’ LIVE
- **Error Handling**: Failed uploads marked as FAILED with error details
- **File Cleanup**: Local files deleted after successful upload
- **Retry Logic**: Configurable upload attempts

## ðŸŽ¯ Perfect for E-commerce!

This implementation is ideal for:
- **Online Stores** - Upload product demos to your brand channel
- **Product Catalogs** - Centralized video showcase  
- **Brand Consistency** - Professional YouTube presence
- **SEO Benefits** - All videos boost your channel authority
- **Easy Management** - No complex user system needed

Just connect once and start uploading product videos! ðŸš€